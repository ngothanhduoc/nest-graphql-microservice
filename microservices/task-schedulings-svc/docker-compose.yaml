version: "3"

services:

  task-schedulings-svc:
    image: "task-schedulings-svc:dev"
    container_name: "task-schedulings-svc"
    build:
      context: "./microservices/task-schedulings-svc"
    networks:
      - "task-schedulings-svc"
      - "queuedomain"
    expose:
      - "50051"
    depends_on:
      - "savings-db"
      - "rabbitmq"
    environment:
      NODE_ENV: "test"
      DB_HOST: "savings-db"
      DB_PORT: "5432"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      DB_DATABASE: "postgres"
      DB_SCHEMA: "public"
      DB_SYNC: "true"
      # CRON_EXPRESSION: "59 23 * * *"
      CRON_EXPRESSION: "*/10 * * * * *"
      NUMBER_USER_OF_PART: 5
      RABBIT_URL: "amqp://guest:guest@rabbitmq:5672/"
      QUEUE_SAVING_NAME: "savings"
    healthcheck:
      test: [ "CMD", "/bin/grpc_health_probe", "-addr=:50051" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: "on-failure"
  savings-db:
    image: "postgres"
    container_name: "savings-db"
    networks:
      - "task-schedulings-svc"
    expose:
      - "5432"
    ports:
      - "5552:5432"
    volumes:
      - savingsdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres'" ]
      interval: 30s
      timeout: 30s
      retries: 3
    # restart: "on-failure"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    expose:
      - "5672"
    ports:
      - 5553:5672
      - 5554:15672
    volumes:
      - rabbitmqdata/:/var/lib/rabbitmq/
      - rabbitmqlog:/var/log/rabbitmq
    networks:
      - queuedomain
    # default rabbitmq user & pass: guest

networks:
  task-schedulings-svc:
  queuedomain:


volumes:
  savingsdata:
  rabbitmqdata:
  rabbitmqlog:
